/********************************************************************************
*Descripci칩n           : Creacion de la base de datos (SWAAAD) y tablas         *
*Fecha Creaci칩n        : 09/08/2017                                             *
*Par치metros            :                                                        *
*Autores               : Nelys Mollocondo Pari                                  *
*                      : Christian Tony Vilca Qui침onez                          *
*Cambios importantes   : Sep  3 22:04:21 2017                                   *
*                                                                               *
*                                                                               *
*                                                                               *
*********************************************************************************/


USE `swaaad`;

DROP TABLE IF EXISTS `usuario`;

CREATE TABLE `usuario` (
  `id_usuario` INT(11) NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) DEFAULT NULL,
  `password` VARCHAR(60) DEFAULT NULL,
  `enabled` TINYINT(4) DEFAULT NULL,
  `role` VARCHAR(45) DEFAULT NULL,
  PRIMARY KEY (`id_usuario`)
);

DROP TABLE IF EXISTS `docente`;

CREATE TABLE `docente` (
  `ID_DOCENTE` INT(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE` VARCHAR(50) DEFAULT NULL,
  `APELLIDOS` VARCHAR(50) DEFAULT NULL,
  `GENERO` VARCHAR(1) DEFAULT NULL,
  `EMAIL` VARCHAR(60) DEFAULT NULL,
  `ID_USUARIO` INT(11) NOT NULL,
  PRIMARY KEY (`ID_DOCENTE`),
  CONSTRAINT `fk_docente_usuario` FOREIGN KEY (`ID_USUARIO`) REFERENCES `usuario` (`id_usuario`)
); 

DROP TABLE IF EXISTS `alumno`;

CREATE TABLE `alumno` (
  `ID_ALUMNO` INT(11) NOT NULL AUTO_INCREMENT,
  `NOMBRES` VARCHAR(50) DEFAULT NULL,
  `APELLIDOS` VARCHAR(50) DEFAULT NULL,
  `GENERO` VARCHAR(1) DEFAULT NULL,
  `EMAIL` VARCHAR(60) DEFAULT NULL,
  `NOMBRES_APODERADO` VARCHAR(50) DEFAULT NULL,
  `APELLIDOS_APODERADO` VARCHAR(50) DEFAULT NULL,
  `EMAIL_APODERADO` VARCHAR(60) DEFAULT NULL,
  `ID_USUARIO` INT(11) DEFAULT NULL,
  PRIMARY KEY (`ID_ALUMNO`),
  CONSTRAINT `fk_alumno_usuario` FOREIGN KEY (`ID_USUARIO`) REFERENCES `usuario` (`ID_USUARIO`)
) 

DROP TABLE IF EXISTS `curso`;

CREATE TABLE `curso` (
  `ID_CURSO` INT(11) NOT NULL AUTO_INCREMENT,
  `NOMBRE_CURSO` VARCHAR(60) NOT NULL,
  `INSTITUCION` VARCHAR(60) DEFAULT NULL,
  `GRADO` INT(11) DEFAULT NULL,
  `SECCION` VARCHAR(1) DEFAULT NULL,
  `ANIO` INT(4) DEFAULT NULL,
  `ID_DOCENTE` INT(11) NOT NULL,
  PRIMARY KEY (`ID_CURSO`),
  CONSTRAINT `fk_CURSO_DOCENTE1` FOREIGN KEY (`ID_DOCENTE`) REFERENCES `docente` (`ID_DOCENTE`)
) 

DROP TABLE IF EXISTS `actividad_pedagogica`;

CREATE TABLE `actividad_pedagogica` (
  `ID_ACTIVIDAD` INT(11) NOT NULL AUTO_INCREMENT,
  `FECHA` DATETIME(6) DEFAULT NULL,
  `DESCRIPCION` VARCHAR(50) DEFAULT NULL,
  `ID_CURSO` INT(11) NOT NULL,
  PRIMARY KEY (`ID_ACTIVIDAD`),
  CONSTRAINT `FK_CURSO_ACTIVIDADPEDAGOGICA` FOREIGN KEY (`ID_CURSO`) REFERENCES `curso` (`ID_CURSO`)
);

DROP TABLE IF EXISTS `PERIODO`;

CREATE TABLE `PERIODO` (
  `ID_PERIODO` INT NOT NULL,
  `NUMERO_PERIODOS` INT NULL,
  `DESCRIPCION` VARCHAR(45) NULL,
  `ID_CURSO` INT NOT NULL,
  PRIMARY KEY (`ID_PERIODO`),
  CONSTRAINT `fk_PERIODO_CURSO` FOREIGN KEY (`ID_CURSO`) REFERENCES `CURSO` (`ID_CURSO`)
  );

DROP TABLE IF EXISTS `curso_alumno`;

CREATE TABLE `curso_alumno` (
  `ID_CURSO_ALUMNO` INT(11) NOT NULL AUTO_INCREMENT,
  `ID_CURSO` INT(11) NOT NULL,
  `ID_ALUMNO` INT(11) NOT NULL,
  PRIMARY KEY (`ID_CURSO_ALUMNO`),
  CONSTRAINT `fk_CURSO_ALUMNO_ALUMNO1` FOREIGN KEY (`ID_ALUMNO`) REFERENCES `alumno` (`ID_ALUMNO`),
  CONSTRAINT `fk_CURSO_ALUMNO_CURSO` FOREIGN KEY (`ID_CURSO`) REFERENCES `curso` (`ID_CURSO`) ON DELETE NO ACTION ON UPDATE NO ACTION
) 

DROP TABLE IF EXISTS `aula_dinamica`;

CREATE TABLE `aula_dinamica` (
  `ID_AULA_DINAMICA` INT(11) NOT NULL AUTO_INCREMENT,
  `COORD_X` INT(11) DEFAULT NULL,
  `COORD_Y` INT(11) DEFAULT NULL,
  `COLOR_TEXTO` VARCHAR(7) DEFAULT NULL,
  `COLOR_FONDO` VARCHAR(7) DEFAULT NULL,
  `ESTADO` BIT(1) DEFAULT NULL,
  `ID_CURSO_ALUMNO` INT(11) NOT NULL,
  PRIMARY KEY (`ID_AULA_DINAMICA`),
  CONSTRAINT `fk_AULA_DINAMICA_CURSOALUMNO` FOREIGN KEY (`ID_CURSO_ALUMNO`) REFERENCES `curso_alumno` (`ID_CURSO_ALUMNO`)
) 

DROP TABLE IF EXISTS `asistencia`;

CREATE TABLE `asistencia` (
  `ID_ASISTENCIA` INT(11) NOT NULL AUTO_INCREMENT,
  `ESTADO` VARCHAR(2) DEFAULT NULL,
  `FECHA` DATE DEFAULT NULL,
  `ID_CURSO_ALUMNO` INT(11) DEFAULT NULL,
  PRIMARY KEY (`ID_ASISTENCIA`),
  CONSTRAINT `FK_CURSOALUMNO_ASISTENCIA` FOREIGN KEY (`ID_CURSO_ALUMNO`) REFERENCES `curso_alumno` (`ID_CURSO_ALUMNO`)
) 



DROP TABLE IF EXISTS `evaluacion`;

CREATE TABLE `evaluacion` (
  `ID_EVALUACION` INT(11) NOT NULL AUTO_INCREMENT,
  `ID_CURSO` INT(11) NOT NULL,
  `ID_EVALUACION_DEPENDENCIA` INT(11) DEFAULT NULL,
  `ID_PERIODO` INT NOT NULL,
  `NOMBRE` VARCHAR(30) DEFAULT NULL,
  `DESCRIPCION` VARCHAR(60) DEFAULT NULL,
  `COLOR_FONDO` VARCHAR(7) DEFAULT NULL,
  `COLOR_TEXTO` VARCHAR(7) DEFAULT NULL,
  `FORMULA` VARCHAR(255) DEFAULT NULL,
  `ES_FORMULA` BIT(1) NOT NULL,
  PRIMARY KEY (`ID_EVALUACION`),
   CONSTRAINT `fk_EVALUACION_PERIODO1` FOREIGN KEY (`ID_PERIODO`) REFERENCES `PERIODO` (`ID_PERIODO`)
) 

DROP TABLE IF EXISTS `horario`;

CREATE TABLE `horario` (
  `ID_HORARIO` INT(11) NOT NULL AUTO_INCREMENT,
  `DIA` DATE DEFAULT NULL,
  `HORA_INICIO` TIME(6) DEFAULT NULL,
  `HORA_FIN` TIME(6) DEFAULT NULL,
  `ID_CURSO` INT(11) NOT NULL,
  PRIMARY KEY (`ID_HORARIO`),
  CONSTRAINT `fk_HORARIO_CURSO` FOREIGN KEY (`ID_CURSO`) REFERENCES `curso` (`ID_CURSO`)
) 


DROP TABLE IF EXISTS `nota`;

CREATE TABLE `nota` (
  `ID_NOTA` INT(11) NOT NULL AUTO_INCREMENT,
  `ID_ALUMNO` INT(11) DEFAULT NULL,
  `ID_EVALUACION` INT(11) NOT NULL,
  `NOTA_EVALUATIVA` INT(11) DEFAULT NULL,
  PRIMARY KEY (`ID_NOTA`),
  CONSTRAINT `FK_ALUMNO_NOTA` FOREIGN KEY (`ID_ALUMNO`) REFERENCES `alumno` (`ID_ALUMNO`),
  CONSTRAINT `FK_EVALUACION_NOTA` FOREIGN KEY (`ID_EVALUACION`) REFERENCES `evaluacion` (`ID_EVALUACION`)
) 




